plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}
apply plugin: 'jacoco'

jacoco {
	toolVersion = '0.8.1'
}

group = 'com.mytrip'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR7")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'junit:junit:4.12'
	implementation 'junit:junit:4.12'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.4'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	//implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '3.0.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestReport {
	reports {
		csv.enabled = false
		xml.enabled = false
		html.enabled = true
	}
	afterEvaluate { // (optional) : to exclude classes / packages from coverage
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(
					dir: it,
					exclude: [ 'snmaddula/sboot/crud/App.class', 'snmaddula/sboot/util/**' ])
		})
	}
}

test {
	useJUnitPlatform()
}

build.dependsOn jacocoTestReport